<ul id="page-tree" style="height:500px;overflow-y:auto;">
  <%= render(:partial => (move ? 'move' : 'pagelist'), :locals => { :branch => @tree }) %>
</ul>
<script>
$( document ).ready(function() {
  var h = $('#treeModal').height() - 100;
  h = h < 300 ? 300 : h;
  $('#page-tree').css('height', h)
});
$(window).resize(function() {
  var h = $('#treeModal').height() - 100;
  h = h < 300 ? 300 : h;
  $('#page-tree').css('height', h)
});
$.fn.extend({
  treed: function (o) {
      
    var openedClass = 'glyphicon-minus-sign';
    var closedClass = 'glyphicon-plus-sign';
      
    if (typeof o != 'undefined'){
      if (typeof o.openedClass != 'undefined'){
      openedClass = o.openedClass;
      }
      if (typeof o.closedClass != 'undefined'){
      closedClass = o.closedClass;
      }
    };
      
    //initialize each of the top levels
    var tree = $(this);
    tree.addClass("tree");
    tree.find('li').has("ul").each(function () {
      var branch = $(this); //li with children ul
      branch.prepend("<i class='indicator glyphicon " + closedClass + "'></i>");
      branch.addClass('branch');
      branch.on('click', function (e) {
        if (this == e.target) {
          var icon = $(this).children('i:first');
          icon.toggleClass(openedClass + " " + closedClass);
          $(this).children().children().toggle();
        }
      })
      branch.children().children().toggle();
    });
    //fire event from the dynamically added icon
    tree.find('.branch .indicator').each(function(){
      $(this).on('click', function () {
        $(this).closest('li').click();
      });
    });
    //fire event to open branch if the li contains an anchor instead of text
    //tree.find('.branch>a').each(function () {
    //  $(this).on('click', function (e) {
    //    $(this).closest('li').click();
    //    e.preventDefault();
    //  });
    //});
    //fire event to open branch if the li contains a button instead of text
    tree.find('.branch>button').each(function () {
      $(this).on('click', function (e) {
        $(this).closest('li').click();
        e.preventDefault();
      });
    });
  }
});
//Initialization of treeviews
$('#page-tree').treed({openedClass:'glyphicon-chevron-right', closedClass:'glyphicon-chevron-down'});

<% @breadcrumb.each do |bc| %>
<%   if !bc[:id].nil? %>
  $('#leaf_<%= bc[:id] %>').trigger("click");
<%   end %>
<% end %>

$('#leaf_<%= @id %>').css('font-weight', '700');

// Move
$('.btn_move').click(function() {
  $.ajax({
    type: 'POST',
    url: this.href,
    dataType: 'text',
    success: function(data, textStatus, jqXHR) {
      $(location).attr('href', data);
    },
    error: function(jqXHR, textStatus, errorThrown) {
      alert(textStatus);
    }
  });
  return false;
});
</script>

<style>
.tree, .tree ul {
  margin:0;
  padding:0;
  list-style:none
}
.tree ul {
  margin-left:1em;
  position:relative
}
.tree ul ul {
  margin-left:.5em
}
.tree ul:before {
  content:"";
  display:block;
  width:0;
  position:absolute;
  top:0;
  bottom:0;
  left:0;
  border-left:1px solid
}
.tree li {
  margin:0;
  padding:0 1em;
  line-height:2em;
  color:#369;
  font-weight:300;
  position:relative
}
.tree ul li:before {
  content:"";
  display:block;
  width:10px;
  height:0;
  border-top:1px solid;
  margin-top:-1px;
  position:absolute;
  top:1em;
  left:0
}
.tree ul li:last-child:before {
  background:#fff;
  height:auto;
  top:1em;
  bottom:0
}
.indicator {
  margin-right:5px;
}
.tree li a {
  text-decoration: none;
  color:#369;
}
.tree li button, .tree li button:active, .tree li button:focus {
  text-decoration: none;
  color:#369;
  border:none;
  background:transparent;
  margin:0px 0px 0px 0px;
  padding:0px 0px 0px 0px;
  outline: 0;
}
</style>
